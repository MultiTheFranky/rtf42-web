---
import Layout from "../layouts/Layout.astro";
import {
  MUTATION_ADD_ARMA3_ATTENDANCE,
  QUERY_GET_ARMA3_ATTENDANCE,
} from "../graphql/schemas/arma3";
import {
  Arma3AttendanceStatus,
  type Arma3AttendanceInput,
} from "../graphql/__generated__/schema";
import Arma3Attendance from "@components/arma3/Arma3Attendance.astro";

const { data, loading } = await QUERY_GET_ARMA3_ATTENDANCE({
  date: "2020-01-01",
});
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("username");
    const date = data.get("date");
    const type = data.get("type");
    if (!name || !date || !type) {
      throw new Error("Invalid input");
    }
    console.log(name, date, type);
    const arma3Attendance: Arma3AttendanceInput = {
      attendance: [
        {
          name: name.toString(),
          status:
            type === "1"
              ? Arma3AttendanceStatus.Attended
              : Arma3AttendanceStatus.DidNotAttend,
        },
      ],
      date,
    };

    await MUTATION_ADD_ARMA3_ATTENDANCE(arma3Attendance);
    // Do something with the data
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout title="42nd R.T.F">
  <main>
    <Arma3Attendance />
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
